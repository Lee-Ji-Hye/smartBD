<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserDAO">
	<!-- 로그인 -->
	<select id="selectMember" parameterType="String" resultMap="memberMap">
		select userid,
				userpw,
				enabled
		from user_member_tbl
		where userid = #{userid}
	</select>
	<resultMap type="java.util.Map" id="memberMap">
		<id property="username" column="userid"/>
		<result property="password" column="userpw"/>
		<result property="enabled" column="enabled"/>
		<association property="authority" column="userid" select="getAuthority"/>
	</resultMap>
	<select id="getAuthority" resultType="com.team.smart.security.config.UserGrantedAuthority">
		SELECT a.comp_auth
                , a.comp_seq
                , o.comp_status
                , a.rt_code
                , o.comp_org
                , a.b_code
                , b.b_name
                , b.b_status
                , c.r_code
                , c.rt_regidate rt_date1
                , c.rt_date2
                , fc.f_mainimg
                , o.comp_hp
		 FROM user_compauth_tbl a
         LEFT JOIN 
         room_contract_tbl c
         ON a.rt_code = c.rt_code
         LEFT JOIN
         building_tbl b
         ON a.b_code = b.b_code
         LEFT JOIN user_company_tbl o
         ON a.comp_seq = o.comp_seq
         LEFT JOIN food_company_tbl fc
         ON a.comp_seq = fc.comp_seq
		 WHERE a.userid = #{userid}
	</select>
	<!-- 로그인 -->
	
	<!-- 회원가입(회원등록) -->
	<insert id="insertUser" parameterType="com.team.smart.vo.UserVO">
		insert into user_member_tbl(userid, userpw, name, email, hp) 
    	values(#{userid}, #{userpw}, #{name}, #{email}, #{hp})
	</insert>
	
	<!-- 업체등록 -->
	<insert id="insertComp" parameterType="com.team.smart.vo.CompVO">
		insert into user_company_tbl(comp_seq, comp_section, comp_org, comp_bn, comp_owner, comp_branch, comp_master, comp_business, comp_category, comp_hp, comp_status, b_code)
		values(#{comp_seq}, #{comp_section}, #{comp_org}, #{comp_bn}, #{comp_owner}, #{comp_branch}, #{comp_master}, #{comp_business}, #{comp_category}, #{comp_hp}, #{comp_status}, #{b_code})
	</insert>
	
	<!-- 권한등록(업체등록에따른) -->
	<insert id="insertAuth" parameterType="java.util.Map">
		insert into user_compauth_tbl(userid, comp_auth, rt_code, comp_seq, b_code) values(#{userid}, #{comp_auth}, #{rt_code, jdbcType=VARCHAR}, #{comp_seq, jdbcType=VARCHAR}, #{b_code, jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertBd" parameterType="com.team.smart.vo.BuildingVO">
		insert into building_tbl(b_code, b_area1, b_area2, b_address, b_name, b_floor, b_year, b_park, b_elev, b_heat, b_traffic, b_lat, b_lon, userid, b_unique, b_owner, b_regnum, b_landarea, b_buildarea, b_buildscale, b_status)
		VALUES(#{b_code}, #{b_area1}, #{b_area2}, #{b_address}, #{b_name}, #{b_floor}, #{b_year}, #{b_park}, #{b_elev}, #{b_heat}, #{b_traffic}, #{b_lat}, #{b_lon}, #{userid}, #{b_unique}, #{b_owner}, #{b_regnum}, #{b_landarea}, #{b_buildarea}, #{b_buildscale}, #{b_status})
	</insert>
	
	<select id="compSearch" parameterType="String" resultType="java.util.Map">
		select c.comp_seq code, c.comp_org name from user_company_tbl c, food_company_tbl f where c.comp_seq=f.comp_seq and comp_org like #{keyword}||'%'
	</select>
	
	<select id="bdSearch" parameterType="String" resultType="java.util.Map">
		select b_code code, b_name name from building_tbl where b_name like #{keyword}||'%'
	</select>
	
	
	<insert id="insertAuthReq" parameterType="com.team.smart.vo.AuthReqVO">
		insert into user_authreq_tbl(req_division, req_key, req_auth, userid)
		values(#{req_division},#{req_key},#{req_auth},#{userid})
	</insert>
	
	
	
	
	
	<!-- 회원수정 -->
	
	<!--아이디 존재여부 확인-->
	<select id="selectUserId" parameterType="String" resultType="int">
		select count(*) from user_member_tbl where userid = #{value}
	</select>

	<!--회원가입-->
	<insert id="insertMember" parameterType="com.team.smart.vo.UserVO">
		insert into user_member_tbl
		values(#{userid}, #{userpw_encode}, #{name}, #{email}, #{hp}, sysdate, 0, null, 1)
	</insert>


	<!--회원정보-->
	<select id="getUserInfo" parameterType="String" resultType="com.team.smart.vo.UserVO">
		select * from user_member_tbl where userid = #{value}
	</select>

	<!--비밀번호 get-->
	<select id="selectUserPW" parameterType="String" resultType="String">
		select userpw from user_member_tbl where userid = #{value}
	</select>

	<!--회원 정보 수정-->
	<update id="modifyUserInfo" parameterType="com.team.smart.vo.UserVO">
		update user_member_tbl set name=#{name}, email=#{email}, hp=#{hp} where userid = #{userid}
	</update>

	<!--비밀번호 변경-->
	<update id="modifyUserPwd" parameterType="java.util.Map">
		update user_member_tbl set userpw = #{encodeNewPw} where userid = #{userid}
	</update>

	<!--회원 권한 체크-->
	<select id="userAuthChk" parameterType="String" resultType="int">
		select count(*) cnt from user_compauth_tbl where userid = #{userid}
	</select>

	<!--회원 탈퇴-->
	<delete id="modifyUserWithdraw" parameterType="String">
		delete from user_member_tbl where userid = #{userid}
	</delete>
	
	
	<update id="memVisit" parameterType="String">
		update user_member_tbl set visit = visit+1, visit_date = sysdate where userid = #{userid}
	</update>
	
</mapper>