<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	    
<mapper namespace="RoomDAO">

	<!-- 매물정보 테스트 -->
	<select id="getDetail" resultType="com.team.smart.room.vo.RoomVO">
	
		select * from ROOM_TBL where r_code= #{r_code}
	
	</select>
	
	<!-- 매물 코드 생성 -->
	<select id="getUniqRoomIndex" resultType="int">
		select max(to_number(substr(r_code,2,7)))+1 from ROOM_TBL
	</select>
	
	<!-- 매물 업로드 -->
	<insert id="roomupload" parameterType="com.team.smart.room.vo.RoomVO">
		insert into room_tbl(r_code,b_code,r_img,r_name,r_type,r_price,r_deposit,r_premium,r_ofer_fee,r_area,r_indi_space,r_floor,r_able_date,r_toilet,r_desc,r_pmemo,r_delete,userid,r_kind)
		VALUES(#{r_code},#{b_code},#{r_img},#{r_name},#{r_type},#{r_price},#{r_deposit},#{r_premium},#{r_ofer_fee},#{r_area},#{r_indi_space},${r_floor},#{r_able_date},#{r_toilet},#{r_desc},#{r_pmemo},#{r_delete},#{userid},#{r_kind})
	</insert>
	
	<!-- 슬라이드 이미지 삽입 -->
	<insert id="slide" parameterType="com.team.smart.room.vo.RoomVO">
		insert into room_img_tbl (r_code,r_img)
		VALUES(#{r_code},#{r_img})
	</insert>


	<!-- 매물 갯수 구하기 -->
	<select id="getArticleCnt" resultType="int">
		select count(*) from room_tbl
	</select>
	
	<!-- 매물 내용 구하기 -->
	<select id="List" parameterType="java.util.Map" resultType="com.team.smart.room.vo.RoomVO">
		
			select * from room_tbl 
			where r_delete in (0,1) 
			and b_code=#{b_code} 
			order by regidate desc
		
	</select>
	
	<!-- 매물 수정 -->
	<update id="update" parameterType="com.team.smart.room.vo.RoomVO">
		update room_tbl set r_kind=#{r_kind},r_type=#{r_type},r_price=#{r_price},r_premium=#{r_premium},r_deposit=#{r_deposit}, 
		r_area=#{r_area},r_name=#{r_name},r_toilet=#{r_toilet},r_floor=#{r_floor},r_able_date=#{r_able_date}, 
		r_indi_space=#{r_indi_space},r_ofer_fee=#{r_ofer_fee},r_pmemo=#{r_pmemo},r_desc=#{r_desc} where r_code=#{r_code}
	</update>
	
	
	<!-- 매물 비공개 상태로 전환 -->
	<delete id="delete">
		update room_tbl set r_delete=1 where r_code=#{r_code}
	</delete>
	
	<!-- 비공개 된 매물 다시 공개로 전환 -->
	<delete id="reload">
		update room_tbl set r_delete=0 where r_code=#{r_code}
	</delete>
	
	<!-- 슬라이드용 이미지 갯수 구하기 -->
	<select id="getImagecount" resultType="int">
		select count(*) from room_img_tbl where r_code= #{r_code}
	</select>
	
	<!-- 슬라이드용 이미지 가져오기 -->
	<select id="getImage" resultType="com.team.smart.room.vo.RoomVO">
		select * from room_img_tbl where r_code= #{r_code}
	</select>
	
	
	<select id="getGu" resultType="String" parameterType="String">
        select area2 from area_tbl where area1 = #{si}
	</select>
	
	<select id="getSi" resultType="String">
        select DISTINCT(area1) from area_tbl
	</select>
        
        
	<!-- 계약 총 글 수 -->
	<select id="getContractCnt" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*)
		  FROM room_contract_tbl
		  <if test="sertext != '' ">
		  	 WHERE rt_code like '%' ||  #{sertext} || '%' 
				    OR r_code like '%' ||  #{sertext} || '%'
				    OR rt_mobile like '%' ||  #{sertext} || '%' 
				    OR rt_email like '%' ||  #{sertext} || '%' 
			        OR rt_date1 like '%'|| #{sertext} || '%'
		  	</if>
	</select>
	
	<!-- 계약리스트 -->
	<select id="getContractList" parameterType="java.util.Map" resultType="com.team.smart.room.vo.RoomVO">
		SELECT * 
		  FROM (SELECT rowNum rNum,rt_code,r_code,rt_mobile,rt_email,TO_CHAR(rt_date1,'YYYY-MM-DD') as rt_date1,TO_NUMBER(SUBSTR(r_code, 2)) as r_blockcode
		          FROM room_contract_tbl
		  	<if test="sertext != '' ">
		  	 WHERE rt_code like '%' ||  #{sertext} || '%' 
				    OR r_code like '%' ||  #{sertext} || '%'
				    OR rt_mobile like '%' ||  #{sertext} || '%' 
				    OR rt_email like '%' ||  #{sertext} || '%' 
			        OR rt_date1 like '%'|| #{sertext} || '%'
		  	</if>
			)
	<![CDATA[
		 WHERE rNum >=#{start} AND rNum <= #{end} ORDER BY rt_date1 desc
	  ]]>
	</select>
	
	<!-- 계약 상세정보 -->
	<select id="getContractDetail" parameterType="String" resultType="com.team.smart.room.vo.RoomVO">
		SELECT b.b_area1,b.b_area2,b.b_address,b.b_year,b.b_landarea,b.b_buildscale,b.b_buildarea
			  ,TO_NUMBER(SUBSTR(r.r_code, 2)) as r_blockcode,r.r_type,r.r_price,r.r_deposit,r.r_premium
			  ,c.rt_code,c.rt_hash,c.r_code,c.rt_mobile,c.rt_email,TO_CHAR(c.rt_date1,'YYYY-MM-DD') as rt_date1,TO_CHAR(c.rt_date2,'YYYY-MM-DD') as rt_date2
			  ,u.name,u.hp,u.email
		  FROM building_tbl b, room_tbl r, room_contract_tbl c, user_member_tbl u
		 WHERE b.b_code = r.b_code
		   AND r.r_code = c.r_code
		   AND c.userid = u.userid
		   AND c.rt_code = #{rt_code}
	</select>
	
	<!-- 납부리스트 -->
	<select id="getpaylist" resultType="com.team.smart.room.vo.RoomVO">
		SELECT r.r_code, to_char(rt.rt_date1, 'YYYY-MM-DD') rt_date1 ,to_char(rt.rt_date2, 'YYYY-MM-DD') rt_date2,
		r.r_name,r.r_ofer_fee,r.r_price,rt.rt_deposit,rt.rt_mobile,r.r_premium,rt.rt_code 
		FROM room_contract_tbl rt, 
		room_tbl r 
		where rt.r_code=r.r_code
	</select>
	
	<!-- 납부 상세정보 -->
	<select id="getpaydetail"  resultType="com.team.smart.room.vo.RoomVO">
		SELECT r.r_code, to_char(p.rt_paydate, 'YYYY-MM-DD') rt_date1, 
		rt.rt_deposit,p.rt_pay,r.r_premium,rt.rt_code,p.rt_type
		FROM room_contract_tbl rt,
		room_tbl r,
		room_contract_pay_tbl p
		where rt.r_code=r.r_code
		and r.r_code = p.r_code
		and rt.r_code = p.r_code
		and p.rt_code = #{rt_code}
	</select>
	
	<!-- 결산 월별 월세 합산금액 -->
	<select id="getmonthtotal" resultType="java.util.Map">
		select (substr(rt_paydate,1,5)) payday,  
		sum(rt_pay) monthpay
		from room_contract_pay_tbl
		where rt_type='월세'
		GROUP by (substr(rt_paydate,1,5))
		order by (substr(rt_paydate,1,5))
	</select>
	
	<!-- 임차인 납부 목록 -->
	<select id="getmemberpaylist" resultType="com.team.smart.room.vo.RoomVO">
		select rp.rt_pay,rp.rt_type,
		rp.rt_code,to_char(rp.rt_paydate, 'YYYY-MM-DD') rt_date1
		from room_contract_tbl rc,
		room_contract_pay_tbl rp
		where rc.rt_code = rp.rt_code
		and rc.userid=#{memberid}
	</select>
	
	<!-- 매물 목록 삭제 -->
	<update id="roomDelete" parameterType="String">
		UPDATE room_tbl SET r_delete = 2 where r_code in(${value})
	</update>
</mapper>	   