<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FoodDAO">

	<!-- 음식점 업체 소개 등록 처리 -->
	<insert id="insertStoreUp" parameterType="com.team.smart.food.vo.Food_companyVO">
		INSERT INTO food_company_tbl (comp_seq, comp_org, long_desc, short_desc, f_open_stt, f_open_end, f_category, f_seq, f_mainimg)
		VALUES (#{comp_seq}, #{comp_org}, #{long_desc}, #{short_desc}, #{f_open_stt}, #{f_open_end}, #{f_category}, food_comp_seq.nextval, #{f_mainimg})
	</insert>
	
	<!-- 음식점 업체 소개 등록시 등록 글 -->
	<select id="getStoreSel" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM food_company_tbl WHERE comp_seq = #{comp_seq}
	</select> 
	
	<!-- 음식점 소개 글 등록 글 한 건 가져오기 -->
	<select id="getStoreOne" resultType="com.team.smart.food.vo.Food_companyVO">
		SELECT * FROM food_company_tbl WHERE comp_seq = #{comp_seq}
	</select>
	
	<!-- 음식점 업체 소개 등록 수정  -->
	<update id="modifySujungUpdate" parameterType="com.team.smart.food.vo.Food_companyVO">
		UPDATE food_company_tbl SET long_desc = #{long_desc}, short_desc = #{short_desc}, f_open_stt = #{f_open_stt}, f_open_end = #{f_open_end}, f_mainimg = #{f_mainimg} WHERE comp_seq = #{comp_seq}
	</update>
	
	<!-- 음식점 쿠폰 등록 -->
	<insert id="insertCouponeUp" parameterType="com.team.smart.food.vo.Food_couponVO">
		INSERT INTO food_coupon_tbl (comp_seq,f_coupon_name, f_coupon_price, f_coupon_regidate, f_coupon_start, f_coupon_end, f_coupon_num , f_coupon_count, staff_id)
		VALUES (#{comp_seq}, #{f_coupon_name}, #{f_coupon_price}, SYSDATE, #{f_coupon_start}, #{f_coupon_end}, #{f_coupon_num}, #{f_coupon_count}, #{staff_id})
	</insert>
	
	<!-- 음식점 쿠폰 시리얼 등록 -->
	<insert id="insertCouponSer" parameterType="java.util.Map">
		INSERT INTO food_coupon_serial_tbl (f_serial, f_coupon_num)
		VALUES (#{f_serial}, #{f_coupon_num})
	</insert>
	
	<!-- 음식점 쿠폰 갯수 조회 -->
	<select id="getCouponPage" resultType="int">
		SELECT COUNT(*) FROM food_coupon_tbl
	</select>
	
	<!-- 음식점 쿠폰 리스트 조회 -->
	<select id="getCoupon" resultType="com.team.smart.food.vo.Food_couponVO" parameterType="java.util.Map"> 
		<![CDATA[
		SELECT comp_seq, f_coupon_num, f_coupon_name, f_coupon_price, f_coupon_count, f_coupon_regidate, f_coupon_start, f_coupon_end, f_coupon_num
         FROM (SELECT comp_seq, rownum rNum, f_coupon_num, f_coupon_name, f_coupon_price, f_coupon_count, f_coupon_regidate, f_coupon_start, f_coupon_end
              FROM (SELECT comp_seq, f_coupon_num, f_coupon_name, f_coupon_price, f_coupon_count, f_coupon_regidate, f_coupon_start, f_coupon_end FROM food_coupon_tbl order by comp_seq desc))
        where rNum>=#{startNum}
        and rNum<=#{endNum}
    	]]>
	</select>
	
	<!-- 음식점 쿠폰 시리얼 있는지 확인 -->
	<!-- <select id="getSerial" parameterType="com.team.smart.food.vo.Food_couponVO" resultType="int">
		SELECT COUNT(*) FROM food_coupon_serial_tbl WHERE f_use_date IS NULL AND f_coupon_num = #{f_coupon_num}
	</select> -->
	
	<!-- 음식점 쿠폰 리스트 삭제 -->
	<delete id="deleteCoupon" parameterType="String">
		DELETE food_coupon_tbl WHERE f_coupon_num IN 
		<foreach item="couponChk" collection="array" open="(" separator="," close=")">
			#{couponChk}
		</foreach>
	</delete>
	
	<!-- 음식점 업체 상품 등록 -->
	<insert id="insertGoodsUp" parameterType="com.team.smart.food.vo.Food_menuVO">
		INSERT INTO food_menu_tbl (f_code, comp_seq, f_type, f_name, f_price, f_img, f_icon, userid, f_regidate) 
		VALUES(#{f_code}, #{comp_seq}, #{f_type}, #{f_name}, #{f_price}, #{f_img}, #{f_icon}, #{userid}, SYSDATE)
	</insert>
	
	<!-- 음식점 상품 등록시 등록 상품 -->
	<select id="getGoods" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM food_menu_tbl WHERE comp_seq = #{comp_seq}
	</select>
	
	<!-- 음식점 상품등록 한 건 가져오기 -->
	<select id="getGoodsOneList" resultType="com.team.smart.food.vo.Food_menuVO" parameterType="String">
		SELECT COUNT(*) FROM food_menu_tbl WHERE comp_seq = #{comp_seq}
	</select>
	
	<!-- 음식점 상품 수정시 등록 상품 가져오기 -->
	<select id="getGoodsOne" resultType="com.team.smart.food.vo.Food_menuVO">
		SELECT * FROM food_menu_tbl WHERE f_code = #{f_code}
	</select>
	
	<!-- 음식점 상품 등록 수정 처리하기 -->
	<update id="modifyGoodsSujung" parameterType="com.team.smart.food.vo.Food_menuVO">
		UPDATE food_menu_tbl SET f_type = #{f_type}, f_name = #{f_name}, f_price = #{f_price}, f_img = #{f_img}, f_icon = #{f_icon}, f_regidate = SYSDATE WHERE f_code = #{f_code}
	</update>
	
	<!-- 음식점 상품 등록 갯수 -->
	<select id="getGoodsPage" resultType="int">
		SELECT COUNT(*) FROM food_menu_tbl
	</select>
		
	<!-- 음식점 상품 리스트 조회 -->
	<select id="getGoodsList" resultType="com.team.smart.food.vo.Food_menuVO" parameterType="java.util.Map">
		<![CDATA[
		SELECT comp_seq, f_code, f_type, f_name, f_price, f_img, f_icon, f_regidate
         FROM (SELECT comp_seq, rownum rNum, f_code, f_type, f_name, f_price, f_img, f_icon, f_regidate
              FROM (SELECT comp_seq, f_code, f_type, f_name, f_price, f_img, f_icon, f_regidate FROM food_menu_tbl ORDER BY comp_seq))
        WHERE rNum>=#{startNum}
        AND rNum<=#{endNum}
    	]]>
	</select>
	
	<!-- 음식점 상품 리스트 삭제 -->
	<delete id="deleteGoods" parameterType="String">
		DELETE food_menu_tbl WHERE f_code IN
		<foreach item="f_code" collection="array" open="(" separator="," close=")">
			#{f_code}
		</foreach>
	</delete>
	
	<!-- 음식점 주문 목록 갯수 조회 -->
	<select id="getOrderPage" resultType="int">
		SELECT COUNT(*) FROM food_order_tbl
	</select>
	
	<!-- 음식점 주문 목록 -->
	<select id="getFoodOrderList" resultType="com.team.smart.food.vo.Food_orderVO" parameterType="java.util.Map">
		<![CDATA[
		SELECT comp_seq, f_ocode, f_takeout, f_status, f_name, f_hp, f_receive_time, f_message, userid, f_regidate, f_pay_type, f_amount, f_pay_price
         FROM (SELECT comp_seq, rownum rNum, f_ocode, f_takeout, f_status, f_name, f_hp, f_receive_time, f_message, userid, f_regidate, f_pay_type, f_amount, f_pay_price
              FROM (SELECT comp_seq, f_ocode, f_takeout, f_status, f_name, f_hp, f_receive_time, f_message, userid, f_regidate, f_pay_type, f_amount, f_pay_price FROM food_order_tbl ORDER BY comp_seq desc))
        where rNum>=#{startNum}
        and rNum<=#{endNum}
    	]]>
	</select>
	
	<!-- 음식점 주문 목록 상세보기 -->
	<select id="getFoodDetail" resultType="com.team.smart.food.vo.Food_orderVO" parameterType="String">
		 SELECT o.f_ocode, o.comp_seq, o.f_takeout, o.f_takeout_sale, o.f_status, o.f_name, o.f_hp, o.f_receive_time, o.f_message, o.f_person_num,
        		o.userid, o.f_serial, o.f_regidate, o.f_amount, o.f_sale_price, o.f_pay_type, o.tid, o.f_pay_price, o.f_refund_price, o.f_rate, d.f_odetail_code, d.f_price, d.f_cnt
           FROM food_order_tbl o
           JOIN food_order_detail_tbl d
             ON o.f_name = d.f_name
          WHERE o.f_ocode = #{f_ocode}
	</select>
	
	<!-- 음식점 상품 등록 수정 처리하기 -->
	<update id="amdFood" parameterType="java.util.Map">
		UPDATE food_order_tbl SET f_status = #{f_status} WHERE f_code = #{f_code}
	</update>
	
	
</mapper>

